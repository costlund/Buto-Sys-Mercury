readme:
  name: Buto-Sys-Mercury
  description: |
    Mercury is a Buto system software. 
    It runs on any server supporting PHP. 
    It has no dependencies like any type of database. 
    The main configuration of a Buto system is done with yml files.
    Only 22 files with .php extension for the hole framework.
    HTML code is done with yml in the exact same way but with the benefit to add extra Buto system params.
    One could work with Buto without any knowledge of PHP when building a theme. Only in plugin development PHP skills are needed.
  item:
    -
      name: Theme
      description: |
        Buto can have multiple themes. But in most cases there is only one involved when an application is in production.
      item:
        -
          name: Hello World
          description: An Hello World example where theme is in location /theme/hello/world. This theme only make use of one plugin wf/doc to render a page.
          item:
            -
              name: Config
              description: |
                In /config/settings.yml
                ```
                plugin_modules:
                  doc:
                    plugin: 'wf/doc'
                default_class: doc
                default_method: home
                ```
            -
              name: Page
              description: |
                In /page/home.yml
                ```
                content:
                  div: 
                    type: div
                    innerHTML:
                      span:
                        type: span
                        attribute:
                          id: min_span_tag
                          style: "font-weight:bold"
                        innerHTML: Hello World
                ```
    -
      name: Plugin
      description: |
        Plugins can have one or many of this purposes. A theme must make use of at least one plugin to work properly.
        - Widgets
        - Pages
        - Events
        - Methods
        
        Some plugins are like a complete application. And some are designed just to include a javascript file with a widget.
      item:
        -
          name: Widgets
          description: A widget should be some HTML element on a page.
        -
          name: Pages
          description: A page where there could be layout pages involved. 
        -
          name: Events
          description: Buto system or plugins can fire events. 
        -
          name: Methods
          description: Methods used from other plugins. 
    -
      name: Application dir
      description: |
        Application dir contains this folders.
        - config
        - plugin
        - sys
        - theme
        - public_html
    -
      name: Folders
      description: Folder descriptions.
      item:
        -
          name: config
          description: Must have system settings file settings.yml.
        -
          name: plugin
          description: |
            Plugins is stored in two folder levels. In first level there should only be folders. In second level there is plugin data files.
        -
          name: sys
          description: |
            Buto system folder.
        -
          name: theme
          description: |
            Themes is stored in two folder levels. In first level there should only be folders. In second level there is theme data files.
        -
          name: public_html
          description: |
            Web root folder. One should point your web server Apache/IIS to this folder. This folder can have any name.
    -
      name: Settings
      description: File /config/settings.yml tells Buto which theme to render along with a few params.
      item:
        -
          name: System
          description: |
            This file is read before theme settings file.
            ```
            /config/settings.yml.
            ```
          item:
            -
              name: Basic settings
              description: |
                The file must contain this settings. This theme has location /theme/my/theme.
                ```
                theme: my/theme
                timezone: Europe/Paris
                ```
            -
              name: HTTP_USER_AGENT
              description: |
                One could change theme depending on user agent. Example to rewrite theme param from my/theme to my/next_theme if HTTP_USER_AGENT contains chrome.
                ```
                theme: my/theme
                http_user_agent:
                  '*chrome*':
                    rewrite:
                      set:
                        -
                          path_to_key: theme
                          value: my/next_theme
                ```
                Now it should be like this.
                ```
                theme: my/next_theme
                ```
        -
          name: Theme
          description: |
            This file contains plugin settings for widget, pages, events.
            ```
            /theme/xxx/yyy/config/settings.yml
            ```
          item:
            -
              name: I18N
              description: |
                I18N settings.
                ```
                i18n:
                  language: sv
                  languages:
                    - sv
                    - de
                    - en
                ```
    -
      name: Element
      description: |
        Elements are just as any HTML element but with extra settings attribute for Buto to handle.
        ```
        type: p
        settings:
          disabled: true
        attribute:
          style: 'color:red'
        innerHTML: Hello World
        ```
      item:
        -
          name: Settings
          description: |
            Settings params are used by Buto and not to be rendered in browser.
          item:
            -
              name: Enabled
              description: |
                ```
                type: span
                settings:
                  enabled: true
                innerHTML: Hello World
                ```
            -
              name: Disabled
              description: |
                ```
                type: span
                settings:
                  disabled: true
                innerHTML: Hello World
                ```
            -
              name: I18N
              description: |
                Disable I18N.
                ```
                type: span
                settings:
                  i18n: false
                innerHTML: Hello World
                ```
            -
              name: Server name
              description: |
                Show element depending on server name.
                ```
                type: span
                settings:
                  server_name:
                    allow: true
                    item:
                      - localhost
                innerHTML: Hello World
                ```
        -
          name: Globals
          description: |
            Globals data can be picked up by a string.
            ```
            type: span
            innerHTML: 'globals:_SESSION/username'
            ```
    -
      name: Events
      description: |
        Events are fired by system or plugins.
      item:
        -
          name: Settings
          description: |
            Events are methods registrared in theme settings file.
            ```
            events:
              page_not_found:
                -
                  plugin: 'wf/pagenotfound'
                  method: handler
                  data:
                    location_url: '/d/pagenotfound'
            ```
        -
          name: Method
          description: |
            Method example.
            ```
            public function event_handler(){
              // Do stuff...
            }
            ```
        -
          name: System events
          description: |
            Lisf of events in system.
            ```
            sys_start
            load_config_settings_before
            load_config_settings_after
            load_theme_config_settings_before
            load_theme_config_settings_after
            shutdown
            request_rewrite_before
            request_rewrite_after
            module_method_before
            security_issue
            page_not_found
            module_method_after
            document_render_before
              document_render_element
                document_render_innerhtml
            document_render_after
            sys_close
            ```
        -
          name: Fire event
          description: |
            A plugin can fire event like this.
            ```
            wfEvent::run('_any_name_', array('some_data' => null));
            ```
        -
          name: Globals
          description: |
            Last event is stored in globals to be detected later. Can be detected in __construct method for security reasons.
            ```
            $GLOBALS['sys']['event'] = array('plugin' => 'wf/pagenotfound', 'method' => 'handler');
            ```
            Can be checked like this.
            ```
            if(wfGlobals::get('event/plugin')=='wf/pagenotfound'){
              // 
            }
            ```







