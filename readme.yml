readme:
  name: Buto-Sys-Mercury
  description: |
    Mercury is a Buto system software. 
    It runs on any server supporting PHP. 
    It has no dependencies like any type of database. 
    The main configuration of a Buto system is done with yml files.
    Only 22 files with .php extension for the hole framework.
    HTML code is done with yml in the exact same way but with the benefit to add extra Buto system params.
    One could work with Buto without any knowledge of PHP when building a theme. Only in plugin development PHP skills are needed.
  item:
    -
      name: System
      description: |
        Buto system is located in folder sys/mercury
      item:
        -
          name: Errors
          description: |
            As default errors will be shown along with deprecated notice. 
            In production mode we can change this in /config/settings.yml file.
          item:
            -
              name: Display errors
              description: |
                If to display errors. 
                Default value is 0.
                ```
                display_errors: 1
                ```
                Set value to 0 to hide errors. 
                ```
                display_errors: 0
                ```
            -
              name: Error reporting
              date: '2021-10-27'
              description: |
                Default value is E_ALL to catch all errors.
                ```
                error_reporting: 'E_ALL'
                ```
                To hide deprecated errors one could set it like this.
                ```
                error_reporting: 'E_ALL ^ E_DEPRECATED'
                ```
                To hide deprecated errors and notice one could set it like this.
                ```
                error_reporting: 'E_ALL ^ E_DEPRECATED ^ E_NOTICE'
                ```
        -
          name: Roles
          description: |
            Roles visitor, unknown and client are handled by the system.
            - visitor (always)
            - unknown (if user NOT signed in)
            - client (if user signed in)
            
            Roles normaly used by theme builders.
            - webmaster (user has full access)
            - webadmin (application administrator)
            - developer (user is in developer team)
            
            Along with this roles plugin can handle custom roles depending on purpose. For example.
            - invoice (user should handle invoices)
            - moderator (user is a moderator)
        -
          name: GIT
          description: |
            In folder sys/mercury/git there are sh files to run git status/pull/fetch for all repos. Navigate in terminal to this folder and run commands.
            ```
            sh git_status.sh
            sh git_fetch.sh
            sh git_pull.sh
            ```
            Sometimes when clone a git repo files get status changes. One could solve this issue by running this command.
            ```
            sh git_fileMode.sh
            ```
        -
          name: Time zone
          date: '2022-06-29'
          description: |
            In /config/settings.yml one could set time zone for application (optional).
            Default value is Europe/Paris.
            ```
            timezone: 'America/New_York'
            ```
            If using CURRENT_TIMESTAMP for TIMESTAMP types the system time is used. 
            Change type from TIMESTAMP to DATETIME to apply time zone setting.

            Read more about different time zones.
            ```
            https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
            ```
    -
      name: Theme
      description: |
        Buto can have multiple themes. But in most cases there is only one involved when an application is in production.
      item:
        -
          name: Hello World
          description: An Hello World example where theme is in location /theme/hello/world. This theme only make use of one plugin wf/doc to render a page.
          item:
            -
              name: Config
              description: |
                In /config/settings.yml
                ```
                plugin_modules:
                  doc:
                    plugin: 'wf/doc'
                default_class: doc
                default_method: home
                ```
            -
              name: Page
              date: '2022-05-05'
              description: |
                In /page/home.yml
                ```
                content:
                  div: 
                    type: div
                    innerHTML:
                      span:
                        type: span
                        attribute:
                          id: min_span_tag
                          style: "font-weight:bold"
                        innerHTML: Hello World
                ```
                One could load content via ajax by using the load prefix.
                ```
                        innerHTML: load:/any/page
                ```
                Use request params if needed.
                ```
                        innerHTML: load:/any/page/id/[id]
                ```
            -
              name: Result
              description: |
                Access your theme like this.
                ```
                http://localhost
                ```
                Or.
                ```
                http://localhost/doc/home
                ```
        -
          name: Hello Buto
          date: '2021-05-15'
          description: |
            One could have layout pages. 
            I this example we show how to use two layout files. 
            Also how to use plugin theme/include wich include other plugins one need to build a complet site.
          item:
            -
              name: Config
              description: |
                In /config/settings.yml
                ```
                default_class: d
                default_method: home
                plugin_modules:
                  d:
                    plugin: 'wf/doc'
                plugin:
                  theme:
                    include:
                      enabled: true
                ```
            -
              name: Layout files
              date: '2022-04-05'
              description: |
                In /layout/html.yml
                ```
                settings:
                  path: '1/innerHTML/1/innerHTML'
                content:
                  -
                    type: text
                    text: '<!DOCTYPE html>'
                  -
                    type: html
                    attribute:
                      la: globals:_SESSION/i18n/language
                    innerHTML:
                      -
                        type: head
                        innerHTML:
                          -
                            type: widget
                            data:
                              plugin: 'theme/include'
                              method: include
                      -
                        type: body
                        innerHTML: 'body...'
                ```
                In /layout/main.yml
                ```
                settings:
                  path: '1/innerHTML'
                content:
                  -
                    type: div
                    innerHTML: navbar...
                  -
                    type: div
                    innerHTML: content...
                  -
                    type: div
                    innerHTML: footer...
                ```
            -
              name: Page
              description: |
                In /page/home.yml
                ```
                settings:
                  title: 'Hello Buto'
                  layout:
                    - html
                    - main
                content:
                  - 
                    type: div
                    innerHTML:
                      span:
                        type: span
                        attribute:
                          style: "font-weight:bold"
                        innerHTML: Hello Buto
                ```
            -
              name: Result
              description: |
                Adress.
                ```
                http://localhost
                ```
                Browser output.
                ```
                navbar...
                Hello Buto
                footer...
                ```
        -
          name: Theme configuration
          description: Like in Hello World example there is not much data a Theme need.
          item:
            -
              name: Settings file
              description: |
                In /config/settings.yml
                
                This is basic data.
                ```
                plugin_modules:
                  doc:
                    plugin: 'wf/doc'
                default_class: doc
                default_method: home
                ```
                
                This data can refer to a file.
                ```
                plugin_modules:
                  account:
                    plugin: 'wf/account2'
                    settings: yml:/theme/[theme]/config/plugin_wf_account2.yml
                ```
            -
              name: Folder buto_data
              description: |
                In some case you do not want to include sensitive data in a buto project. One could use a buto_data folder in same folder as a Buto project. Access shoud be like this.                
                ```
                plugin_modules:
                  account:
                    plugin: 'wf/account2'
                    settings: 'yml:/../buto_data/theme/[theme]/config/plugin_wf_account2.yml'
                ```
    -
      name: Plugin
      description: |
        Plugins can have one or many of this purposes. A theme must make use of at least one plugin to work properly.
        - Widgets
        - Pages
        - Events
        - Methods
        
        Some plugins are like a complete application. And some are designed just to include a javascript file with a widget.
      item:
        -
          name: Widgets
          description: A widget should be some HTML element on a page.
        -
          name: Pages
          description: A page where there could be layout pages involved. 
        -
          name: Events
          description: Buto system or plugins can fire events. 
        -
          name: Methods
          description: Methods used from other plugins. 
    -
      name: Application dir
      description: |
        Application dir contains this folders.
        - config
        - plugin
        - sys
        - theme
        - public_html
    -
      name: Folders
      description: Folder descriptions.
      item:
        -
          name: config
          description: Must have system settings file settings.yml.
        -
          name: plugin
          description: |
            Plugins is stored in two folder levels. In first level there should only be folders. In second level there is plugin data files.
        -
          name: sys
          description: |
            Buto system folder.
        -
          name: theme
          description: |
            Themes is stored in two folder levels. In first level there should only be folders. In second level there is theme data files.
        -
          name: public_html
          description: |
            Web root folder. One should point your web server Apache/IIS to this folder. This folder can have any name.
    -
      name: Settings
      description: File /config/settings.yml tells Buto which theme to render along with a few params.
      item:
        -
          name: System
          description: |
            This file is read before theme settings file.
            ```
            /config/settings.yml.
            ```
          item:
            -
              name: Basic settings
              description: |
                The file must contain this settings. This theme has location /theme/my/theme.
                ```
                theme: my/theme
                timezone: Europe/Paris
                ```
                One could set tag to separate themes.
                ```
                tag: _a_tag_to_separate_themes_
                ```
            -
              name: HTTP_USER_AGENT
              description: |
                One could change theme depending on user agent. Example to rewrite theme param from my/theme to my/next_theme if HTTP_USER_AGENT contains chrome.
                ```
                theme: my/theme
                http_user_agent:
                  '*chrome*':
                    rewrite:
                      set:
                        -
                          path_to_key: theme
                          value: my/next_theme
                ```
                Now it should be like this.
                ```
                theme: my/next_theme
                ```
            -
              name: Domain
              description: |
                One could change theme depending on domain name. Example to rewrite theme param from my/theme to my/next_theme if domain is localhost.
                ```
                theme: my/theme
                domain:
                  'localhost':
                    rewrite:
                      set:
                        -
                          path_to_key: theme
                          value: my/next_theme
                ```
                Now it should be like this.
                ```
                theme: my/next_theme
                ```
        -
          name: Theme
          description: |
            This file contains plugin settings for widget, pages, events.
            ```
            /theme/xxx/yyy/config/settings.yml
            ```
          item:
            -
              name: I18N
              date: '2022-04-30'
              description: |
                I18N settings.
                ```
                i18n:
                  language: sv
                  languages:
                    - sv
                    - de
                    - en
                  url:
                    la-sv: sv
                    la-de: de
                    la-en: en
                  lable:
                    sv: Swedish
                    de: Danish
                    en: English
                ```
                Param url is optional. If url like /la-sv language sv will be set in Globals and Session.
                One should use plugin i18n/url_rewrite when using this param to add language prefix for all href values.
                ```
                http://localhost/la-de
                ```
                When system find a match in url language the param is removed from query params.
            -
              name: buto_data folder
              description: |
                Rewrite settings.yml if this file also exist in (app dir) /../buto_data/theme/(theme)/settings.yml
                ```
                rewrite:
                  set:
                    -
                      path_to_key: plugin_modules/account/settings
                      value:
                        allow:
                          signin: true
                          signin_method: username
                          registration: true
                          change_email: true
                          change_username: true
                          change_password: true
                          two_factor_authentication: false
                          remember: false
                        two_factor_authentication:
                          key_timeout: 600
                        mysql:
                          server: '127.0.0.1'
                          database: '_my_db_'
                          user_name: '_username_'
                          password: '_password_'
                ```
    -
      name: Element
      description: |
        Elements are just as any HTML element but with extra settings attribute for Buto to handle.
        ```
        type: p
        settings:
          disabled: true
        attribute:
          style: 'color:red'
        innerHTML: Hello World
        ```
      item:
        -
          name: Attribute
          description: |
            Attributes are set in same way as HTML.
            ```
            type: span
            attribute:
              title: Hello Title
            innerHTML: Hello World
            ```
            Attribute parameter as array render string if style or otherwise json data.
          item:
            -
              name: Style
              description: |
                This element has attribute style from array to string.
                ```
                type: div
                attribute:
                  style:
                    color: red
                    border: 'solid 1px blue'
                    height: 100px
                innerHTML: This element has attribute style from array to string.
                ```
                ```
                <div style="color:red;border:solid 1px blue;height:100px;">This element has attribute style from array to string.</div>                
                ```
            -
              name: JSON
              description: |
                This element has attribute data from array to json.
                ```
                type: span
                attribute:
                  data:
                    name: Title
                    id: 123
                innerHTML: Hello World
                ```
                HTML
                ```
                <span data="{&quot;name&quot;:&quot;Title&quot;,&quot;id&quot;:123}" onclick="console.log(JSON.parse(this.getAttribute('data')))">Hello World</span>
                ```
        -
          name: Settings
          description: |
            Settings params are used by Buto and not to be rendered in browser.
          item:
            -
              name: Role
              description: |
                Restrict rendering element regarding to user role.
                ```
                type: span
                settings:
                  role:
                    item:
                      - client
                innerHTML: This element is only rendered if user has role client. 
                ```
            -
              name: Date
              date: '2021-12-15'
              description: |
                Restrict rendering element regarding to dates or times.
                ```
                type: span
                settings:
                  date:
                    from: '2020-01-01 12:00:00'
                    to: '2020-12-31 23:59:59'
                innerHTML: This element is NOT rendered year 2020 from 12.00.  
                ```
                Set param allow to false to restrict by dates. Default value is true.
                ```
                type: span
                settings:
                  date:
                    allow: false
                    from: '2020-01-01'
                    to: '2020-12-31 23:59:59'
                innerHTML: This element is only rendered year 2020. 
                ```
            -
              name: Enabled
              description: |
                ```
                type: span
                settings:
                  enabled: true
                innerHTML: Hello World
                ```
                Enabled could also have yml-string.
                ```
                enabled: 'yml:/theme/[theme]/config/settings.yml:plugin_modules/account/settings/allow/change_email'
                ```
            -
              name: Disabled
              description: |
                ```
                type: span
                settings:
                  disabled: true
                innerHTML: Hello World
                ```
                Disabled could also have yml-string.
                ```
                disabled: 'yml:/theme/[theme]/config/settings.yml:plugin_modules/account/settings/allow/change_email'
                ```
            -
              name: I18N
              date: '2022-04-05'
              description: |
                Disable I18N.
                ```
                type: span
                settings:
                  i18n: false
                innerHTML: Hello World
                ```
                Show element depending on language (one language).
                ```
                type: img
                settings:
                  i18n:
                    language: sv
                attribute:
                  src: /theme/[theme]/flag/flag_se.png
                ```
                Show element depending on language (multiple languages).
                ```
                type: img
                settings:
                  i18n:
                    language:
                      - sv
                      - en
                attribute:
                  src: /theme/[theme]/flag/flag_se.png
                ```
            -
              name: Server name
              description: |
                Show element depending on server name.
                ```
                type: span
                settings:
                  server_name:
                    allow: true
                    item:
                      - localhost
                innerHTML: Hello World
                ```
            -
              name: Page
              date: '2022-03-24'
              description: |
                Show element depending on page (wfServer::getRequestUri()).
                ```
                type: span
                settings:
                  page:
                    allow: true
                    item:
                      - '/'
                innerHTML: Show if start page.
                ```
                ```
                type: span
                settings:
                  page:
                    allow: false
                    item:
                      - '/'
                innerHTML: Hide if start page.
                ```
                ```
                type: span
                settings:
                  page:
                    allow: true
                    item:
                      - '*contact*'
                innerHTML: Show if value contact is in page adress.
                ```
            -
              name: Param
              description: |
                Show element depending on param value.
                ```
                -
                  type: div
                  settings:
                    param:
                      allow: false
                      name: sw
                      value: John
                  innerHTML: Paras sw must have value John
                -
                  type: div
                  settings:
                    param:
                      allow: true
                      name: sw
                      value: John
                  innerHTML: Paras sw can not have value John
                -
                  type: div
                  settings:
                    param:
                      allow: true
                      name: sw
                  innerHTML: Paras sw must have a value
                -
                  type: div
                  settings:
                    param:
                      allow: false
                      name: sw
                  innerHTML: Paras sw can not have a value
                ```
            -
              name: innerHTML
              description: |
                Add innerHTML content (string only) from a file. Stop on first existing file.
                ```
                type: h1
                settings:
                  innerHTML:
                    -
                      file: /../buto_data/theme/[theme]/data.yml
                      path_to_key: title
                    -
                      file: /theme/[theme]/buto_data/data.yml
                      path_to_key: title
                ```
                Add innerHTML content from Globals.
                ```
                type: h1
                settings:
                  innerHTML: globals:sys/theme
                ```
                ```
                type: h1
                settings:
                  innerHTML: 'globals:_SESSION/user_id'
                ```
            -
              name: file_exist
              description: |
                Render element if a file exist only.
                ```
                type: widget
                settings:
                  file_exist: /theme/[theme]/buto_data/data.yml
                data:
                  plugin: 'theme/include'
                  method: include
                  data: yml:/theme/[theme]/buto_data/data.yml:plugin/theme/include/data
                ```
            -
              name: tag
              date: '2022-04-12'
              description: |
                Render element if tag match.
                ```
                type: div
                settings:
                  tag: _my_tag_
                innerHTML: 'Show this if tag match.'
                ```
                Render element if tags match.
                ```
                type: div
                settings:
                  tag:
                    - _my_tag_
                    - _my_tag2_
                innerHTML: 'Show this if tag match.'
                ```
        -
          name: Globals
          description: |
            Globals data can be picked up by a string.
            ```
            type: span
            innerHTML: 'globals:_SESSION/username'
            ```
            ```
            type: span
            innerHTML: 'globals:sys/theme'
            ```
        -
          name: Render
          date: '2021-05-01'
          description: |
            Render element from plugin.
            ```
            wfDocument::renderElement($element);
            ```
            Set capture to 1 or 2 to be able to get content via getContent method. Good for send email usage.
            Set to 1 if capture html in content param and also render.
            Set to 2 if capture html in content param only and NOT render.
            ```
            $element = new PluginWfYml(__DIR__.'/element/mail_registrate.yml');
            wfDocument::$capture=2;
            wfDocument::renderElement($element->get());
            $content = wfDocument::getContent();
            ```
            Render a file direct from a folder.
            ```
            wfDocument::renderElementFromFolder(__DIR__, __FUNCTION__);
            ```
        -
          name: Comment
          date: '2021-04-01'
          description: |
            Add a comment to element.
            ```
            -
              _: 'This is a comment one could use in yml. This comment will not be removed if yml file is updated by system.'
              type: div
              innerHTML: 'Some text'
            ```
    -
      name: Events
      description: |
        Events are fired by system or plugins.
      item:
        -
          name: Settings
          description: |
            Events are methods registrared in theme settings file.
            ```
            events:
              page_not_found:
                -
                  plugin: 'wf/pagenotfound'
                  method: handler
                  data:
                    location_url: '/d/pagenotfound'
            ```
        -
          name: Method
          description: |
            Method example.
            ```
            public function event_handler(){
              // Do stuff...
            }
            ```
        -
          name: System events
          description: |
            Lisf of events in system.
            ```
            sys_start
            load_config_settings_before
            load_config_settings_after
            load_theme_config_settings_before
            load_theme_config_settings_after
            shutdown
            request_rewrite_before
            request_rewrite_after
            module_method_before
            security_issue
            page_not_found
            module_method_after
            document_render_before
              document_render_element
                document_render_innerhtml
            document_render_after
            sys_close
            ```
        -
          name: Fire event
          description: |
            A plugin can fire event like this.
            ```
            wfEvent::run('_any_name_', array('some_data' => null));
            ```
        -
          name: Globals
          description: |
            Last event is stored in globals to be detected later. Can be detected in __construct method for security reasons.
            ```
            $GLOBALS['sys']['event'] = array('plugin' => 'wf/pagenotfound', 'method' => 'handler');
            ```
            Can be checked like this.
            ```
            if(wfGlobals::get('event/plugin')=='wf/pagenotfound'){
              // 
            }
            ```
    -
      name: Lib
      description: |
        Methods.
      item:
        -
          name: wfArray
        -
          name: wfArraySearch
        -
          name: wfConfig
        -
          name: wfCrypt
        -
          name: wfDate
        -
          name: wfDocument
          description: |
            Handle elements.
          item:
            -
              name: Globals
              date: '2022-05-03'
              description: |
                Set globals for an element and it´s child elements. This example change path settings for PluginI18nTranslate_v1.
                ```
                type: div
                innerHTML:
                  -
                    type: div
                    innerHTML: Hello World
                  -
                    type: div
                    settings:
                      globals:
                        -
                          path_to_key: 'settings/plugin/i18n/translate_v1/settings/path'
                          value: '/plugin/invoice/invoice_v1/i18n'
                    innerHTML: Hello World
                ```
                This example disable i18n if using plugin PluginI18nTranslate_v1.
                ```
                type: div
                settings:
                  globals:
                    -
                      path_to_key: 'settings/plugin/i18n/translate_v1/settings/disabled'
                      value: true
                innerHTML:
                  -
                    type: div
                    innerHTML: Hello World
                ```
            -
              name: Mode
              description: |
                Default mode is HTML but could also be SVG. SVG mode render text elements.
                ```
                wfDocument::setModeSvg();
                wfDocument::renderElement($svg->get());
                wfDocument::setModeHtml();
                ```
        -
          name: wfElement
        -
          name: wfEvent
          date: '2021-11-15'
          description: |
            This events is handled by system along with custom events.
            ```
            sys_start
            load_config_settings_before
            load_config_settings_after
            load_theme_config_settings_before
            load_theme_config_settings_after
            shutdown
            request_rewrite_before
            request_rewrite_after
            module_method_before
            security_issue
            page_not_found
            module_method_after
            document_render_before
              document_render_element
                document_render_innerhtml
            document_render_after
            sys_close
            ```
            This event should be registred in /theme/folder/folder/config/settings.yml file.
            For example using plugin wf/errorhandling method shutdown when event shutdown is thrown.
            ```
            events:
              shutdown:
                -
                  plugin: 'wf/errorhandling'
                  method: 'shutdown'
                  data: 'some data...'
            ```
        -
          name: wfFilesystem
        -
          name: wfGlobals
          description: |
            Handle Globals variable.
        -
          name: wfHelp
        -
          name: wfI18n
          date: '2022-04-05'
          description: |
            Handle I18N.
          item:
            -
              name: Auto select
              description: |
                Trying to set language once per session from server param HTTP_ACCEPT_LANGUAGE.
                ```
                i18n/auto_select (true on the set)
                ```
                ```
                i18n/language (param to set)
                ```
            -
              name: getLanguagesMore
              description: |
                Returns array.
                ```
                -
                  name: sv
                  label: Swedish
                -
                  name: en
                  label: English
                ```
        -
          name: wfPlugin
        -
          name: wfRequest
          description: |
            Handle request params.
          item:
            -
              name: Usage
              description: |
                Print variable name.
                ```
                print_r(wfRequest::get('name'));
                ```
                Print all.
                ```
                print_r(wfRequest::getAll());
                ```
                Set variable name.
                ```
                wfRequest::set('name', 'James');
                ```
        -
          name: wfServer
        -
          name: wfSettings
          item:
            -
              name: replaceTag
              date: '2022-06-03'
              description: |
                Replace [tag] with wfGlobals::get('tag').
                Replace [la] with wfI18n::getLanguage().
        -
          name: wfUser
        -
          name: wfPhpinfo
          date: '2021-10-27'
          description: |
            Show info if user has role webmaster or webadmin.
            ```
            /?phpinfo=phpinfo.
            /?phpinfo=session.
            /?phpinfo=server.
            /?phpinfo=cookie.
            /?phpinfo=error_fatal.
            /?phpinfo=error_deprecated.
            /?phpinfo=error_notice.
            ```
            Show info if user has role webmaster.
            ```
            /?phpinfo=globals.
            ```
    -
      name: Special requests
      description: |
        One could run some params to get special methods.
      item:
        -
          name: Phpinfo
          description: |
            Webmaster can view phpinfo via /?phpinfo=phpinfo.
        -
          name: Session
          description: |
            Webmaster can view session via /?phpinfo=session.
        -
          name: Server
          description: |
            Webmaster can view server via /?phpinfo=server.
        -
          name: Globals
          description: |
            Webmaster can view globals via /?phpinfo=globals.
        -
          name: Error fatal
          date: '2021-10-27'
          description: |
            Webmaster can render fatal error via /?phpinfo=error_fatal.
        -
          name: Error deprecated
          date: '2021-10-27'
          description: |
            Webmaster can render deprecated error via /?phpinfo=error_deprecated.
        -
          name: Error notice
          date: '2021-10-27'
          description: |
            Webmaster can render notice error via /?phpinfo=error_notice.
        -
          name: Load theme
          description: |
            Webmaster can change theme via /?loadtheme=_folder_/_folder_.
        -
          name: Sign out
          description: |
            One could sign out via /?signout=1.
        -
          name: Webmaster page
          description: |
            Webmaster can go to /?webmaster_plugin=chart/amcharts_v3&page=demo to view a page and there is no need of setup in theme settings.yml.







