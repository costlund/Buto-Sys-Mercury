readme:
  name: Buto
  description: |
    - Specification of a Buto system.
    - Mercury is the name of this Buto system. 
    - It runs on any server supporting PHP. 
    - It has no dependencies like any type of database. 
    - The main configuration of a Buto system is done with yml files.
    - Only 22 files with .php extension for the hole framework.
    - HTML code is done with yml in the exact same way but with the benefit to add extra Buto system params.
    - One could work with Buto without any knowledge of PHP when building a theme. Only in plugin development PHP skills are needed.
  item:
    -
      name: System
      description: |
        Buto system is located in folder sys/mercury
      item:
        -
          name: Errors
          description: |
            As default errors will be shown along with deprecated notice. 
            In production mode we can change this in /config/settings.yml file.
          item:
            -
              name: Display errors
              date: '2024-11-25'
              description: |
                Default value is 1.
                ```
                display_errors: 1
                ```
                Set value to 0 to hide errors. 
                ```
                display_errors: 0
                ```
            -
              name: Error reporting
              date: '2021-10-27'
              description: |
                Default value is E_ALL to catch all errors.
                ```
                error_reporting: 'E_ALL'
                ```
                To hide deprecated errors one could set it like this.
                ```
                error_reporting: 'E_ALL ^ E_DEPRECATED'
                ```
                To hide deprecated errors and notice one could set it like this.
                ```
                error_reporting: 'E_ALL ^ E_DEPRECATED ^ E_NOTICE'
                ```
        -
          name: Roles
          description: |
            Roles visitor, unknown and client are handled by the system.
            - visitor (always)
            - unknown (if user NOT signed in)
            - client (if user signed in)
            
            Roles normaly used by theme builders.
            - webmaster (user has full access)
            - webadmin (application administrator)
            - developer (user is in developer team)
            
            Along with this roles plugin can handle custom roles depending on purpose. For example.
            - invoice (user should handle invoices)
            - moderator (user is a moderator)
        -
          name: GIT
          description: |
            In folder sys/mercury/git there are sh files to run git status/pull/fetch for all repos. Navigate in terminal to this folder and run commands.
            ```
            sh git_status.sh
            sh git_fetch.sh
            sh git_pull.sh
            ```
            Sometimes when clone a git repo files get status changes. One could solve this issue by running this command.
            ```
            sh git_fileMode.sh
            ```
        -
          name: Repo
          description: |
            Download from Github.com.
            ```
            https://github.com/costlund/Buto-Sys-Mercury.git
            ```
        -
          name: Time zone
          date: '2022-06-29'
          description: |
            In /config/settings.yml one could set time zone for application (optional).
            Default value is Europe/Paris.
            ```
            timezone: 'America/New_York'
            ```
            If using CURRENT_TIMESTAMP for TIMESTAMP types the system time is used. 
            Change type from TIMESTAMP to DATETIME to apply time zone setting.

            Read more about different time zones.
            ```
            https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
            ```
        -
          name: Enabled
          date: '2024-10-30'
          description: |
            As default only widgets has to have the enabled param to true in theme settings.
            ```
            plugin:
              my:
                plugin:
                  enabled: true
                
            ```
            However this could also be applied to pages by setting system param enabled to all.
            ```
            enabled: all
            enabled: widget (default)
            ```
    -
      name: Theme
      description: |
        Buto can have multiple themes. But in most cases there is only one involved when an application is in production.
      item:
        -
          name: Hello World
          description: An Hello World example where theme is in location /theme/hello/world. This theme only make use of one plugin wf/doc to render a page.
          item:
            -
              name: Config
              description: |
                In /config/settings.yml
                ```
                plugin_modules:
                  doc:
                    plugin: 'wf/doc'
                default_class: doc
                default_method: home
                ```
            -
              name: Page
              date: '2024-08-29'
              description: |
                In /page/home.yml
                ```
                content:
                  div: 
                    type: div
                    innerHTML:
                      span:
                        type: span
                        attribute:
                          id: min_span_tag
                          style: "font-weight:bold"
                        innerHTML: Hello World
                ```
                One could load content via ajax by using the load prefix.
                ```
                        innerHTML: load:/any/page
                ```
                Use request params if needed.
                ```
                        innerHTML: load:/any/page/id/[id]
                ```
                Or use attribute.
                ```
                        attribute:
                          wf_ajax_load: /any/page
                ```
            -
              name: Result
              description: |
                Access your theme like this.
                ```
                http://localhost
                ```
                Or.
                ```
                http://localhost/doc/home
                ```
        -
          name: Hello Buto
          date: '2021-05-15'
          description: |
            One could have layout pages. 
            I this example we show how to use two layout files. 
            Also how to use plugin theme/include wich include other plugins one need to build a complet site.
          item:
            -
              name: Config
              description: |
                In /config/settings.yml
                ```
                default_class: d
                default_method: home
                plugin_modules:
                  d:
                    plugin: 'wf/doc'
                plugin:
                  theme:
                    include:
                      enabled: true
                ```
            -
              name: Layout files
              date: '2022-04-05'
              description: |
                In /layout/html.yml
                ```
                settings:
                  path: '1/innerHTML/1/innerHTML'
                content:
                  -
                    type: text
                    text: '<!DOCTYPE html>'
                  -
                    type: html
                    attribute:
                      la: globals:_SESSION/i18n/language
                    innerHTML:
                      -
                        type: head
                        innerHTML:
                          -
                            type: widget
                            data:
                              plugin: 'theme/include'
                              method: include
                      -
                        type: body
                        innerHTML: 'body...'
                ```
                In /layout/main.yml
                ```
                settings:
                  path: '1/innerHTML'
                content:
                  -
                    type: div
                    innerHTML: navbar...
                  -
                    type: div
                    innerHTML: content...
                  -
                    type: div
                    innerHTML: footer...
                ```
            -
              name: Page
              description: |
                In /page/home.yml
                ```
                settings:
                  title: 'Hello Buto'
                  layout:
                    - html
                    - main
                content:
                  - 
                    type: div
                    innerHTML:
                      span:
                        type: span
                        attribute:
                          style: "font-weight:bold"
                        innerHTML: Hello Buto
                ```
            -
              name: Result
              description: |
                Adress.
                ```
                http://localhost
                ```
                Browser output.
                ```
                navbar...
                Hello Buto
                footer...
                ```
        -
          name: Theme configuration
          description: Like in Hello World example there is not much data a Theme need.
          item:
            -
              name: Settings file
              description: |
                In /config/settings.yml
                
                This is basic data.
                ```
                plugin_modules:
                  doc:
                    plugin: 'wf/doc'
                default_class: doc
                default_method: home
                ```
                
                This data can refer to a file.
                ```
                plugin_modules:
                  account:
                    plugin: 'wf/account2'
                    settings: yml:/theme/[theme]/config/plugin_wf_account2.yml
                ```
            -
              name: Folder buto_data
              description: |
                In some case you do not want to include sensitive data in a buto project. One could use a buto_data folder in same folder as a Buto project. Access shoud be like this.                
                ```
                plugin_modules:
                  account:
                    plugin: 'wf/account2'
                    settings: 'yml:/../buto_data/theme/[theme]/config/plugin_wf_account2.yml'
                ```
        -
          name: Hello Buto from scratch
          date: '2024-11-25'
          description: |
            - Create Hello Buto application from scratch.
            - Name of theme is demo/demo
            - Create a Buto system folder.
            - Open terminal and go to folder.
          item:
            -
              name: System setup
              item:
                -
                  name: Make dir
                  description: |
                    ````
                    mkdir config
                    mkdir sys
                    mkdir web
                    mkdir web/plugin
                    mkdir web/theme
                    mkdir plugin
                    mkdir theme
                    mkdir theme/demo
                    mkdir theme/demo/demo
                    mkdir plugin/wf
                    ````
                -
                  name: Create config file 
                  description: |
                    ````
                    touch config/settings.yml
                    echo "theme: demo/demo" >> config/settings.yml
                    ````
                -
                  name: Clone Buto system 
                  description: |
                    ````
                    git clone https://github.com/costlund/Buto-Sys-Mercury.git sys/mercury
                    cp sys/mercury/root/* web
                    cp sys/mercury/root/.htaccess web
                    ````
                -
                  name: Clone plugin
                  description: |
                    ````
                    git clone https://github.com/costlund/Buto-Plugin-WfArray.git plugin/wf/array
                    git clone https://github.com/costlund/Buto-Plugin-WfArraysearch.git plugin/wf/arraysearch
                    ````
            -
              name: Create theme
              description: |
                - Go to theme folder.
                - Create folder config.
                - Add file settings.yml.
                - Add content.

                ````
                default_class: d
                default_method: hello
                plugin_modules:
                  d:
                    plugin: my/plugin
                ````

                - Got to plugin folder.
                - Create folder my/plugin.
                - Go to the folder.
                - Create file PluginMyPlugin.php.
                - Add content.

                ````
                class PluginMyPlugin{
                  public function page_hello(){
                    echo "Hello Buto!";
                  }
                }
                ````
            -
              name: Run application
              description: |
                - If using MAMP set Document Root to the web folder.
                - Run application.
    -
      name: Plugin
      date: '2023-06-14'
      description: |
        Plugins can have one or many of this purposes. A theme must make use of at least one plugin to work properly.
        - Widgets
        - Pages
        - Events
        - Methods
        - Element methods
        
        Some plugins are like a complete application. And some are designed just to include a javascript file with a widget.
      item:
        -
          name: Widgets
          description: A widget should be some HTML element on a page.
        -
          name: Pages
          description: |
            A page where there could be layout pages involved. 
            ````
            settings:
              layout:
                - html
                - main
              title: 'My title'
              methods:
                -
                  plugin: vote/vote_public
                  method: set_title
                  data:
                    test: 1234
            content:
              -
                type: div
                attribute:
                  class: row
                innerHTML:
                  -
                    type: div
                    attribute:
                      class: col-md-12
                      id: panel_content
                    innerHTML:
                      -
                        type: widget
                        data:
                          plugin: vote/vote_public
                          method: org
            ````

          item:
            -
              name: Methods
              description: |
                On could set methods to be running for a page.
                ````
                public function set_title($page, $data){
                  $page = new PluginWfArray($page);
                  // Do something...
                  return $page->get();
                }
                ````
        -
          name: Events
          description: Buto system or plugins can fire events. 
        -
          name: Methods
          description: Methods used from other plugins. 
        -
          name: Element methods
          date: '2023-06-14'
          description: |
            Methods used from an element.
            Example.
            ````
            type: body
            settings:
              methods:
                -
                  plugin: element/style
                  method: background_cover
                  data:
                    src: /theme/[theme]/background.jpg
            ````
            Method example.
            ````
            public function element_background_cover($element, $data){
              //Handle element as needed and return it.
              return $element;
            }
            ````

    -
      name: Application dir
      description: |
        Application dir contains this folders.
        - config
        - plugin
        - sys
        - theme
        - public_html
    -
      name: Folders
      description: Folder descriptions.
      item:
        -
          name: config
          description: Must have system settings file settings.yml.
        -
          name: plugin
          description: |
            Plugins is stored in two folder levels. In first level there should only be folders. In second level there is plugin data files.
        -
          name: sys
          description: |
            Buto system folder.
        -
          name: theme
          description: |
            Themes is stored in two folder levels. In first level there should only be folders. In second level there is theme data files.
        -
          name: public_html
          description: |
            Web root folder. One should point your web server Apache/IIS to this folder. This folder can have any name.
    -
      name: Settings
      description: File /config/settings.yml tells Buto which theme to render along with a few params.
      item:
        -
          name: System
          description: |
            This file is read before theme settings file.
            ```
            /config/settings.yml.
            ```
          item:
            -
              name: Basic settings
              description: |
                The file must contain this settings. This theme has location /theme/my/theme.
                ```
                theme: my/theme
                timezone: Europe/Paris
                ```
                One could set tag to separate themes.
                ```
                tag: _a_tag_to_separate_themes_
                ```
            -
              name: HTTP_USER_AGENT
              description: |
                One could change theme depending on user agent. Example to rewrite theme param from my/theme to my/next_theme if HTTP_USER_AGENT contains chrome.
                ```
                theme: my/theme
                http_user_agent:
                  '*chrome*':
                    rewrite:
                      set:
                        -
                          path_to_key: theme
                          value: my/next_theme
                ```
                Now it should be like this.
                ```
                theme: my/next_theme
                ```
            -
              name: Domain
              description: |
                One could change theme depending on domain name. Example to rewrite theme param from my/theme to my/next_theme if domain is localhost.
                ```
                theme: my/theme
                domain:
                  'localhost':
                    rewrite:
                      set:
                        -
                          path_to_key: theme
                          value: my/next_theme
                ```
                Now it should be like this.
                ```
                theme: my/next_theme
                ```
        -
          name: Theme
          description: |
            This file contains plugin settings for widget, pages, events.
            ```
            /theme/xxx/yyy/config/settings.yml
            ```
          item:
            -
              name: I18N
              date: '2022-04-30'
              description: |
                I18N settings.
                ```
                i18n:
                  language: sv
                  languages:
                    - sv
                    - de
                    - en
                  url:
                    la-sv: sv
                    la-de: de
                    la-en: en
                  lable:
                    sv: Swedish
                    de: Danish
                    en: English
                ```
                Param url is optional. If url like /la-sv language sv will be set in Globals and Session.
                One should use plugin i18n/url_rewrite when using this param to add language prefix for all href values.
                ```
                http://localhost/la-de
                ```
                When system find a match in url language the param is removed from query params.
            -
              name: buto_data folder
              description: |
                Rewrite settings.yml if this file also exist in (app dir) /../buto_data/theme/(theme)/settings.yml
                ```
                rewrite:
                  set:
                    -
                      path_to_key: plugin_modules/account/settings
                      value:
                        allow:
                          signin: true
                          signin_method: username
                          registration: true
                          change_email: true
                          change_username: true
                          change_password: true
                          two_factor_authentication: false
                          remember: false
                        two_factor_authentication:
                          key_timeout: 600
                        mysql:
                          server: '127.0.0.1'
                          database: '_my_db_'
                          user_name: '_username_'
                          password: '_password_'
                ```
        -
          name: host
          date: '2024-12-09'
          description: |
            Param host could be used to determite if application is in a development invironment. 
            This value is checked in method wfHelp::isLocalhost() or wfGlobals::get('settings/host').
            
            Default value.
            ```
            host: _not_set_
            ```
            Then if host has a value in theme buto_data settings file via rewrite registration.
            Here one should use localhost if in development mode. If in production mode one should set the domain name of the application or leave empty.
            ```
            rewrite:
              set:
                -
                  path_to_key: host
                  value: localhost
            ```
            One could also set host in theme settings file. This is not recomended due to the same file could end up in production mode.
            ```
            host: 'world.com'
            ```
            We can not rely on server paramter HTTP_HOST due to one could set localhost in host header and use ip in the url request.
    -
      name: Element
      description: |
        Elements are just as any HTML element but with extra settings attribute for Buto to handle.
        ```
        type: p
        settings:
          disabled: true
        attribute:
          style: 'color:red'
        innerHTML: Hello World
        ```
      item:
        -
          name: Attribute
          description: |
            Attributes are set in same way as HTML.
            ```
            type: span
            attribute:
              title: Hello Title
            innerHTML: Hello World
            ```
            Attribute parameter as array render string if style or otherwise json data.
          item:
            -
              name: Style
              description: |
                This element has attribute style from array to string.
                ```
                type: div
                attribute:
                  style:
                    color: red
                    border: 'solid 1px blue'
                    height: 100px
                innerHTML: This element has attribute style from array to string.
                ```
                ```
                <div style="color:red;border:solid 1px blue;height:100px;">This element has attribute style from array to string.</div>                
                ```
            -
              name: JSON
              description: |
                This element has attribute data from array to json.
                ```
                type: span
                attribute:
                  data:
                    name: Title
                    id: 123
                innerHTML: Hello World
                ```
                HTML
                ```
                <span data="{&quot;name&quot;:&quot;Title&quot;,&quot;id&quot;:123}" onclick="console.log(JSON.parse(this.getAttribute('data')))">Hello World</span>
                ```
        -
          name: Settings
          description: |
            Settings params are used by Buto and not to be rendered in browser.
          item:
            -
              name: Role
              description: |
                Restrict rendering element regarding to user role.
                ```
                type: span
                settings:
                  role:
                    item:
                      - client
                innerHTML: This element is only rendered if user has role client. 
                ```
            -
              name: Date
              date: '2021-12-15'
              description: |
                Restrict rendering element regarding to date.
                ```
                type: span
                settings:
                  date:
                    from: '2020-01-01 00:00:00'
                    to: '2020-12-31 23:59:59'
                innerHTML: Render this element year 2020.  
                ```
                ```
                type: span
                settings:
                  date:
                    allow: false
                    from: '2020-01-01'
                    to: '2020-12-31 23:59:59'
                innerHTML: Do not render this element year 2020. 
                ```
            -
              name: Enabled
              description: |
                ```
                type: span
                settings:
                  enabled: true
                innerHTML: Hello World
                ```
                Enabled could also have yml-string.
                ```
                enabled: 'yml:/theme/[theme]/config/settings.yml:plugin_modules/account/settings/allow/change_email'
                ```
            -
              name: Disabled
              description: |
                ```
                type: span
                settings:
                  disabled: true
                innerHTML: Hello World
                ```
                Disabled could also have yml-string.
                ```
                disabled: 'yml:/theme/[theme]/config/settings.yml:plugin_modules/account/settings/allow/change_email'
                ```
            -
              name: I18N
              date: '2022-04-05'
              description: |
                Disable I18N.
                ```
                type: span
                settings:
                  i18n: false
                innerHTML: Hello World
                ```
                Show element depending on language (one language).
                ```
                type: img
                settings:
                  i18n:
                    language: sv
                attribute:
                  src: /theme/[theme]/flag/flag_se.png
                ```
                Show element depending on language (multiple languages).
                ```
                type: img
                settings:
                  i18n:
                    language:
                      - sv
                      - en
                attribute:
                  src: /theme/[theme]/flag/flag_se.png
                ```
            -
              name: Server name
              description: |
                Show element depending on server name.
                ```
                type: span
                settings:
                  server_name:
                    allow: true
                    item:
                      - localhost
                innerHTML: Hello World
                ```
            -
              name: Page
              date: '2022-03-24'
              description: |
                Show element depending on page (wfServer::getRequestUri()).
                ```
                type: span
                settings:
                  page:
                    allow: true
                    item:
                      - '/'
                innerHTML: Show if start page.
                ```
                ```
                type: span
                settings:
                  page:
                    allow: false
                    item:
                      - '/'
                innerHTML: Hide if start page.
                ```
                ```
                type: span
                settings:
                  page:
                    allow: true
                    item:
                      - '*contact*'
                innerHTML: Show if value contact is in page adress.
                ```
            -
              name: Param
              description: |
                Show element depending on param value.
                ```
                -
                  type: div
                  settings:
                    param:
                      allow: false
                      name: sw
                      value: John
                  innerHTML: Paras sw must have value John
                -
                  type: div
                  settings:
                    param:
                      allow: true
                      name: sw
                      value: John
                  innerHTML: Paras sw can not have value John
                -
                  type: div
                  settings:
                    param:
                      allow: true
                      name: sw
                  innerHTML: Paras sw must have a value
                -
                  type: div
                  settings:
                    param:
                      allow: false
                      name: sw
                  innerHTML: Paras sw can not have a value
                ```
            -
              name: innerHTML
              description: |
                Add innerHTML content (string only) from a file. Stop on first existing file.
                ```
                type: h1
                settings:
                  innerHTML:
                    -
                      file: /../buto_data/theme/[theme]/data.yml
                      path_to_key: title
                    -
                      file: /theme/[theme]/buto_data/data.yml
                      path_to_key: title
                ```
                Add innerHTML content from Globals.
                ```
                type: h1
                settings:
                  innerHTML: globals:sys/theme
                ```
                ```
                type: h1
                settings:
                  innerHTML: 'globals:_SESSION/user_id'
                ```
                Add innerHTML content from file.
                ```
                type: div
                settings:
                  innerHTML: file:/theme/[theme]/content/file.html
                ```
            -
              name: file_exist
              description: |
                Render element if a file exist only.
                ```
                type: widget
                settings:
                  file_exist: /theme/[theme]/buto_data/data.yml
                data:
                  plugin: 'theme/include'
                  method: include
                  data: yml:/theme/[theme]/buto_data/data.yml:plugin/theme/include/data
                ```
            -
              name: tag
              date: '2022-04-12'
              description: |
                Render element if tag match.
                ```
                type: div
                settings:
                  tag: _my_tag_
                innerHTML: 'Show this if tag match.'
                ```
                Render element if tags match.
                ```
                type: div
                settings:
                  tag:
                    - _my_tag_
                    - _my_tag2_
                innerHTML: 'Show this if tag match.'
                ```
        -
          name: innerHTML
          description: |
            One can embed text from any file.
            ```
            innerHTML: file:/_path_/any_text.txt
            ```
        -
          name: Globals
          description: |
            Globals data can be picked up by a string.
            ```
            type: span
            innerHTML: 'globals:_SESSION/username'
            ```
            ```
            type: span
            innerHTML: 'globals:sys/theme'
            ```
        -
          name: Comment
          date: '2021-04-01'
          description: |
            Add a comment to element.
            ```
            -
              _: 'This is a comment one could use in yml. This comment will not be removed if yml file is updated by system.'
              type: div
              innerHTML: 'Some text'
            ```
    -
      name: Events
      description: |
        Events are fired by system or plugins.
      item:
        -
          name: Settings
          description: |
            Events are methods registrared in theme settings file.
            ```
            events:
              page_not_found:
                -
                  plugin: 'wf/pagenotfound'
                  method: handler
                  data:
                    location_url: '/d/pagenotfound'
            ```
        -
          name: Method
          description: |
            Method example.
            ```
            public function event_handler(){
              // Do stuff...
            }
            ```
        -
          name: System events
          description: |
            Lisf of events in system.
            ```
            sys_start
            load_config_settings_before
            load_config_settings_after
            load_theme_config_settings_before
            load_theme_config_settings_after
            shutdown
            request_rewrite_before
            request_rewrite_after
            module_method_before
            security_issue
            page_not_found
            module_method_after
            document_render_before
              document_render_element
                document_render_innerhtml
            document_render_after
            document_render_title
            sys_close
            ```
        -
          name: Fire event
          description: |
            A plugin can fire event like this.
            ```
            wfEvent::run('_any_name_', array('some_data' => null));
            ```
        -
          name: Globals
          description: |
            Last event is stored in globals to be detected later. Can be detected in __construct method for security reasons.
            ```
            $GLOBALS['sys']['event'] = array('plugin' => 'wf/pagenotfound', 'method' => 'handler');
            ```
            Can be checked like this.
            ```
            if(wfGlobals::get('event/plugin')=='wf/pagenotfound'){
              // 
            }
            ```
    -
      name: Lib
      date: '2023-08-09'
      description: |
        Class files loaded from /sys/(name)/lib.
      item:
        -
          name: wfArray
        -
          name: wfArraySearch
        -
          name: wfConfig
        -
          name: wfCrypt
          date: '2023-01-22'
          description: |
            Methods.
          item:
            -
              name: getOpensslRandomPseudoBytes
              description: |
                Returns uniq id using openssl_random_pseudo_bytes.
                ```
                6e04-96da-5f50-572e-bc6d-b610
                ```
        -
          name: wfDate
        -
          name: wfDocument
          date: '2023-11-17'
          description: |
            Handle elements.
          item:
            -
              name: renderElement
              description: |
                Render element from plugin.
                ```
                wfDocument::renderElement($element);
                ```
            -
              name: getContent
              description: |
                Set capture to 1 or 2 to be able to get content via getContent method. Good for send email usage.
                Set to 1 if capture html in content param and also render.
                Set to 2 if capture html in content param only and NOT render.
                ```
                $element = new PluginWfYml(__DIR__.'/element/mail_registrate.yml');
                wfDocument::$capture=2;
                wfDocument::renderElement($element->get());
                $content = wfDocument::getContent();
                ```
            -
              name: renderElementFromFolder
              description: |
                Render a file direct from a folder where filename is the same as method name.
                ```
                wfDocument::renderElementFromFolder(__DIR__, __FUNCTION__);
                ```
            -
              name: setModeSvg
              description: |
                Default mode is HTML but could also be SVG. SVG mode render text elements.
                ```
                wfDocument::setModeSvg();
                wfDocument::renderElement($svg->get());
                wfDocument::setModeHtml();
                ```
            -
              name: renderStartTag
              date: '2023-11-17'
              item:
                -
                  name: Globals
                  date: '2022-05-03'
                  description: |
                    Set globals for an element and it´s child elements. This example change path settings for PluginI18nTranslate_v1.
                    ```
                    type: div
                    innerHTML:
                      -
                        type: div
                        innerHTML: Hello World
                      -
                        type: div
                        settings:
                          globals:
                            -
                              path_to_key: 'settings/plugin/i18n/translate_v1/settings/path'
                              value: '/plugin/invoice/invoice_v1/i18n'
                        innerHTML: Hello World
                    ```
                    This example disable i18n if using plugin PluginI18nTranslate_v1.
                    ```
                    type: div
                    settings:
                      globals:
                        -
                          path_to_key: 'settings/plugin/i18n/translate_v1/settings/disabled'
                          value: true
                    innerHTML:
                      -
                        type: div
                        innerHTML: Hello World
                    ```
                -
                  name: Confirm
                  description: |
                    Add confirm handle for A element in method renderStartTag if attribute data-content-confirm is set.
                    ```
                    type: a
                    attribute: 
                      data-content-confirm: Are you sure to run this href?
                      href: '/d/test_button?works=yes'
                    innerHTML: Confirm href
                    ```
                    ```
                    type: a
                    attribute: 
                      data-content-confirm: Are you sure to run this onclick?
                      onclick: alert('You clicked OK in the prompt!')
                    innerHTML: Confirm onclick
                    ```
        -
          name: wfElement
        -
          name: wfEvent
          date: '2021-11-15'
          description: |
            This events is handled by system along with custom events.
            ```
            sys_start
            load_config_settings_before
            load_config_settings_after
            load_theme_config_settings_before
            load_theme_config_settings_after
            shutdown
            request_rewrite_before
            request_rewrite_after
            module_method_before
            security_issue
            page_not_found
            module_method_after
            document_render_before
              document_render_element
                document_render_innerhtml
            document_render_after
            sys_close
            ```
            This event should be registred in /theme/folder/folder/config/settings.yml file.
            For example using plugin wf/errorhandling method shutdown when event shutdown is thrown.
            ```
            events:
              shutdown:
                -
                  plugin: 'wf/errorhandling'
                  method: 'shutdown'
                  data: 'some data...'
            ```
        -
          name: wfFilesystem
          date: '2023-02-20'
          item:
            -
              name: isDir
              description: |
                Return true if a dir or false if a file.
                ```
                wfFilesystem::isDir('/full/path/to/dir_or_file');
                ```
            -
              name: delete_in_dir
              description: |
                Delete all files and folders in dir.
                ```
                wfFilesystem::delete_in_dir('/full/path/to/dir');
                ```
        -
          name: wfGlobals
          description: |
            Handle Globals variable.
        -
          name: wfHelp
        -
          name: wfI18n
          date: '2022-04-05'
          description: |
            Handle I18N.
          item:
            -
              name: Auto select
              description: |
                Session params.
                Trying to set language once per session from server param HTTP_ACCEPT_LANGUAGE.
                ```
                i18n:
                  auto_select: (true on the set)
                  language: (param to set)
                ```
                To avoid to set param i18n/language in theme settings.
                ```
                i18n:
                  auto_select: false
                ```
            -
              name: getLanguagesMore
              description: |
                Returns array.
                ```
                -
                  name: sv
                  label: Swedish
                -
                  name: en
                  label: English
                ```
        -
          name: wfPlugin
          item:
            -
              name: validateParams
              description: |
                Validate params in array.
                ```
                wfPlugin::validateParams(__CLASS__, __FUNCTION__, (array with validation settings), (array to validate));
                ```
                Validation settings (example).
                ```
                mysql: 
                  message: Param [key] is missing!
                  type: exist
                mail: 
                  message: Param [key] is missing!
                  type: exist
                ```
                Replace / (slash) with $.
                ```
                mail$subject: 
                  message: Param [key] is missing!
                  type: exist
                ```
                Output (php exit)(example).
                ```
                PluginMailQueue_create.__construct says: Param mail/subject is missing!
                ```
        -
          name: wfRequest
          description: |
            Handle request params.
          item:
            -
              name: get
              description: |
                Print variable name.
                ```
                print_r(wfRequest::get('name'));
                ```
            -
              name: getAll
              description: |
                Print all.
                ```
                print_r(wfRequest::getAll());
                ```
            -
              name: set
              description: |
                Set variable name.
                ```
                wfRequest::set('name', 'James');
                ```
            -
              name: rewrite
              description: |
                Handle server variable REQUEST_URI (or HTTP_X_ORIGINAL_URL for windows).
        -
          name: wfServer
          item:
            -
              name: typeOfAccept
              date: '2022-09-23'
              description: |
                Check server variable HTTP_ACCEPT for in string.
                Returns.
                - page (text/html).
                - ajax (text/javascript).
                - json (&#42;/&#42;).
                - unknown (no match). 
            -
              name: isHost
              date: '2023-10-11'
              description: |
                Check if host by name (typical localhost for developer purpose).
                Returns boolean.
        -
          name: wfSettings
          item:
            -
              name: safe_mode
              date: '2024-10-15'
              description: |
                - Public static variable to turn off safe mode by change from true to false.
            -
              name: replaceTag
              date: '2022-06-03'
              description: |
                - Replace [tag] with wfGlobals::get('tag').
            -
              name: replaceDir
              date: '2022-07-27'
              description: |
                - Replace [app_dir]' with wfArray::get($GLOBALS, 'sys/app_dir').
                - Replace [web_dir]' with wfArray::get($GLOBALS, 'sys/web_dir').
                - Replace [class]' with wfArray::get($GLOBALS, 'sys/class').
                - Replace [theme]' with wfSettings::getTheme().
                - Replace [tag]' with wfGlobals::get('tag').
                - Replace [la]' with wfI18n::getLanguage().
                - Replace [host]' with wfServer::getHttpHost().
        -
          name: wfUser
        -
          name: wfPhpfunc
          date: '2023-08-09'
          description: |
            Created to handle PHP version 8.2.
          item:
            -
              name: str_replace
              description: Handle if param replace is null.
            -
              name: strstr
              description: Handle if param haystack is null.
            -
              name: substr
              description: Handle if param string is null.
        -
          name: wfPhpinfo
          date: '2021-10-27'
          description: |
            Show info if user has role webmaster or webadmin.
            ```
            /?phpinfo=phpinfo.
            /?phpinfo=session.
            /?phpinfo=server.
            /?phpinfo=cookie.
            /?phpinfo=error_fatal.
            /?phpinfo=error_deprecated.
            /?phpinfo=error_notice.
            ```
            Show info if user has role webmaster.
            ```
            /?phpinfo=globals.
            ```
          item:
            -
              name: session
              description: |
                ````
                i18n: (i18n data)
                  language: sv
                  auto_select: true
                sys:
                  id: 211195832863c819d939f97400611891 (Last page id)
                  page: (Page data, only ten latest)
                plugin: (Plugin data)
                  twitter:
                    bootstrap413v:
                      include: true
                secure: true (User has sign in)
                email: (User email)
                username: (User username)
                user_id: (User user_id)
                role: (User roles)
                  - webmaster
                  - webadmin
                details: (User details)
                  log_count_except_this: 96
                  last_login_before_today: '2023-01-17 18:38:54'
                  days_login_before_today: 1
                theme_data:
                  version: (Theme version)
                ````
        -
          name: wfWidget
          date: '2022-10-03'
          item:
            -
              name: handle_data
              description: |
                Handle data passed to widget.
                ```
                $wData = wfWidget::handle_data($data);
                ```
                Passing default data.
                ```
                $default = array(
                  'height' => '400px'
                );
                $wData = wfWidget::handle_data($data, $default);
                ```
    -
      name: Special requests
      description: |
        One could run some params to get special methods.
        This works only if user has role webmaster or if on localhost.
      item:
        -
          name: Phpinfo
          description: |
            ```
            /?phpinfo=phpinfo
            ```
        -
          name: Session
          description: |
            ```
            /?phpinfo=session
            ```
            Filter by path parameter.
            ```
            /?phpinfo=session&path=plugin
            ```
        -
          name: Server
          description: |
            ```
            /?phpinfo=server
            ```
        -
          name: Globals
          description: |
            ```
            /?phpinfo=globals
            ```
            Filter by path parameter.
            ```
            /?phpinfo=globals&path=settings
            ```
        -
          name: Error fatal
          date: '2021-10-27'
          description: |
            ```
            /?phpinfo=error_fatal
            ```
        -
          name: Error deprecated
          date: '2021-10-27'
          description: |
            ```
            /?phpinfo=error_deprecated
            ```
        -
          name: Error notice
          date: '2021-10-27'
          description: |
            ```
            /?phpinfo=error_notice
            ```
        -
          name: Load theme
          description: |
            ```
            /?loadtheme=_folder_/_folder_
            ```
        -
          name: Sign out
          description: |
            ```
            /?signout=1
            ```
        -
          name: Plugin page
          description: |
            If a developer needs to run plugin code without using theme settings.
            ```
            /?webmaster_plugin=chart/amcharts_v3&page=demo_serial
            ```
    -
      name: Mandatory plugin
      description: |
        There are two plugins who has to be included.
      item:
        -
          name: wf/array
          description: |
            Download from Github.com.
            ```
            https://github.com/costlund/Buto-Plugin-WfArray.git
            ```
        -
          name: wf/arraysearch
          description: |
            Download from Github.com.
            ```
            https://github.com/costlund/Buto-Plugin-WfArraysearch.git
            ```
    -
      name: Title
      description: |
        Page title are set from layout and page files. 
        
        Layout.
        ```
        settings:
          title: My layout title
        ```
        Page.
        ```
        settings:
          title: My page title
        ```
        Title.
        ```
        My page title - My layout title
        ```
        Event example using plugin i18n/translate_v1 will translate between hyphen.
        ```
        events:
          document_render_title:
            -
              plugin: i18n/translate_v1
              method: translate_title
        ```
